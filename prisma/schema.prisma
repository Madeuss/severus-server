generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  name       String
  username   String    @unique
  email      String    @unique
  password   String
  avatar     String?
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @updatedAt @map(name: "updated_at")

  posts      Post[]
  likes      Like[]
  followers  User[]    @relation(name: "Followers")
  following  User[]    @relation(name: "Followers")
  comments   Comment[]
  savedPosts SavedPost[]
}

model Post {
  id        String    @id @default(cuid())
  userId    String
  title     String?
  content   String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes     Like[]
  comments  Comment[]
  savedPosts SavedPost[]

  @@index([userId])
}

model Like {
  userId String
  postId String
  user   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
  @@index([userId])
  @@index([postId])
}

model Comment {
  id        String    @id @default(cuid())
  userId    String
  postId    String
  content   String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([postId])
}

model SavedPost {
  id        String    @id @default(cuid())
  userId    String
  postId    String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([postId])
}
